import { Telegraf } from 'telegraf';
import { Markup } from 'telegraf';
import { MyContext } from '../../types';
import { isAdmin } from '../middleware/auth';

export function setupHomeHandler(bot: Telegraf<MyContext>) {
  bot.command('home', async (ctx) => {
    const keyboard = Markup.keyboard([
      ['–î–ª—è —Å—Ç–∞–∂–µ—Ä–æ–≤', '–ë–∞–∑–æ–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ'],
      ['–ö–ê–†–ì–û', '–ü–í–ó –∏ –ø–æ—á—Ç–æ–º–∞—Ç—ã'],
      ['–°–ë–ü', '–î–ª—è –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–∞'],
      ['–í–°–î / –í–ü–î / –ü—Ä–æ—Å–≤–µ—â–µ–Ω–∏–µ', '–°–∞–º–æ–∏–Ω–∫–∞—Å—Å–∞—Ü–∏—è'],
      ['–¢–ï–°–¢–´', 'Casarte'],
      ['–°–∏—Å—Ç–µ–º–∞ —Ç—Ä–µ–π—Å–æ–≤', '–î–∂–∞–º–∏–ª—å–∫–æ'],
      ['–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–Ω—ã–µ –≥—Ä—É–∑—ã', '–ü—Ä–æ–≥—Ä–∞–º–º–∞ "–õ—É—á—à–∏–π —Å–æ—Ç—Ä—É–¥–Ω–∏–∫"'],
      ['–ê–∫—Ç –æ—Å–º–æ—Ç—Ä–∞/–ê–∫—Ç –Ω–µ—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è', '–†–ï–°–¢–û–†'],
      ['–î–∏—Å–ø–µ—Ç—á–µ—Ä', '–°–¢–û–ü—ã'],
      ['–ü—Ä–∞–≤–∏–ª–∞ –ø–∞—Ä–∫–æ–≤–∫–∏', '–û–±—É—á–µ–Ω–∏–µ –ø–æ –æ—à–∏–±–∫–∞–º'],
      ['–ü–í–ó –ê–≤–∏—Ç–æ', '–û—Ö—Ä–∞–Ω–∞ —Ç—Ä—É–¥–∞'],
      ['–î–æ—Å—Ç–∞–≤–∫–∞ WB'],
      ['–ü—Ä–∏–≤—è–∑–∫–∞ –≥—Ä—É–∑–æ–≤—ã—Ö –º–µ—Å—Ç –ø—Ä–∏ —Å–±–æ—Ä–µ. –°–¥–∞—á–∞ –≤ —è—á–µ–π–∫—É', '–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ú–ü–ö']
    ]).resize();

    // Add admin button for admins
    if (ctx.from && isAdmin(ctx.from.id)) {
      keyboard.keyboard.push(['–§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤']);
    }

    await ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:', {
      parse_mode: 'HTML',
      reply_markup: keyboard.reply_markup
    });
  });

  bot.hears('–î–ª—è —Å—Ç–∞–∂–µ—Ä–æ–≤', async (ctx) => {
    const keyboard = Markup.keyboard([
      ['–ü–∞–º—è—Ç–∫–∞ —Å—Ç–∞–∂–µ—Ä–∞']
    ]).resize();

    await ctx.reply(
      '–í—ã–±–µ—Ä–∏—Ç–µ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ä–∞–∑–¥–µ–ª\n\n–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ /home',
      {
        parse_mode: 'HTML',
        reply_markup: keyboard.reply_markup
      }
    );
  });

  bot.hears('–ü–∞–º—è—Ç–∫–∞ —Å—Ç–∞–∂–µ—Ä–∞', async (ctx) => {
    await ctx.reply('–û–∑–Ω–∞–∫–æ–º—å—Ç–µ—Å—å —Å –ø–∞–º—è—Ç–∫–æ–π –¥–ª—è —Å—Ç–∞–∂–µ—Ä–æ–≤:');
    await ctx.reply('üìÑ –î–æ–∫—É–º–µ–Ω—Ç: –ü–∞–º—è—Ç–∫–∞ –¥–ª—è –∫—É—Ä—å–µ—Ä–æ–≤ –∏ –≤–æ–¥–∏—Ç–µ–ª–µ–π.pdf');
    await ctx.reply('–î–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ /home', { parse_mode: 'HTML' });
  });
}